services:
  db:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - ./docker-supabase.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - supabase_net

  postgrest:
    image: postgrest/postgrest:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - docker-supabase.env
    environment:
      DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      DB_ANON_ROLE: ${DB_ANON_ROLE}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8000
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - supabase_net

  storage:
    image: supabase/storage-api:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - docker-supabase.env
    environment:
      SUPABASE_DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ANON_KEY: ${ANON_KEY}
      SERVICE_ROLE_KEY: ${SERVICE_ROLE_KEY}
      FILE_SIZE_LIMIT: 52428800
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - storage-data:/var/lib/storage
    restart: unless-stopped
    networks:
      - supabase_net

volumes:
  db-data:
  storage-data:

networks:
  supabase_net:
    driver: bridge
